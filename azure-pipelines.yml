trigger:
- build-pipeline

pool:
  vmImage: 'windows-latest'

variables:
  websiteName: 'RuigeLearning'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: ./wwwroot

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - Release'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration Release'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - Release'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()

- stage: Deploy
  displayName: Deploy to IIS
  dependsOn: Build
  jobs:
  - deployment: DeployToIIS
    displayName: Deploy the web application to OFFICE-APP15
    environment:
      name: office-app-15-env
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(System.ArtifactsDirectory)'

          #- task: IISWebAppManagementOnMachineGroup@0
          #  displayName: 'Create App Pool and Website'
          #  inputs:
          #    WebsiteName: '$(websiteName)'
          #    WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot\$(websiteName)'
          #    CreateOrUpdateAppPoolForWebsite: true
          #    AppPoolNameForWebsite: '$(websiteName)'
          #    Port: '80'
          #    IPAddress: '*'
          #    Protocol: 'http'
              
          #- task: IISWebAppDeploymentOnMachineGroup@0
          #  displayName: 'Deploy IIS Website'
          #  inputs:
          #    WebSiteName: '$(websiteName)'
          #    Package: '$(System.ArtifactsDirectory)\**\*.zip'